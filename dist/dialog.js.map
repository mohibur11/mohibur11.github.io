{"version":3,"file":"dialog.js","mappings":"CAAA,WACE,aA8DA,SAASA,EAAUC,EAAMC,GACvBC,aAAaF,GAAM,SAAUG,EAAOC,GAC9BA,GACFC,EAAE,wBAAwBC,OAC1BD,EAAE,eAAeE,KAAKC,KAAKC,UAAUL,EAAO,KAAM,IAClDC,EAAE,kBAAkBK,OAChBT,GAAUA,GAAS,KAEvBI,EAAE,kBAAkBC,OACpBK,cAAcN,EAAE,cAAeF,EAAOS,GACtCP,EAAE,wBAAwBK,OACtBT,GAAUA,GAAS,GAE3B,GACF,CAEA,SAASW,IACPP,EAAE,gBAAgBQ,YAAY,eAAeC,WAAW,WACxDT,EAAEU,MAAMC,SAAS,gBAAgBC,SAAS,eAAeC,KAAK,UAAW,WACzEb,EAAE,2BAA2BC,OAC7BD,EAAE,kBAAkBS,WAAW,WACjC,CAMA,SAASK,EAAmBC,EAAMC,GAC3BA,IACHA,EAAMC,OAAOC,SAASC,MAExBJ,EAAOA,EAAKK,QAAQ,UAAW,QAC/B,IACEC,EADY,IAAIC,OAAO,OAASP,EAAO,qBACvBQ,KAAKP,GACvB,OAAKK,EACAA,EAAQ,GACNG,mBAAmBH,EAAQ,GAAGD,QAAQ,MAAO,MAD5B,GADH,IAGvB,CAhGAK,OAAOC,WAAa,SAAUC,GAC5BC,OAAOC,UAAUC,OAAM,WACrB,GAAIb,OAAOC,SAASa,OAGlB,GADajB,EAAmB,QAE9Bd,EAAE,2BAA2BK,WACxB,CAGL,IAAMV,EAAOmB,EAAmB,kBAC1BkB,EAASlB,EAAmB,iBAElCd,EAAE,gBAAgBiC,IAAItC,GACtBD,EAAUC,GAAM,SAAUuC,GACpBA,IACFlC,EAAE,gBAAgBQ,YAAY,eAC9BR,EAAE,SACCmC,QAAO,WACN,OAAOzB,KAAK0B,QAAUJ,CACxB,IACCpB,SAAS,eACTC,KAAK,UAAW,WACnBb,EAAE,kBAAkBS,WAAW,YAEnC,GACF,CAKFT,EAAE,gBAAgBqC,GAAG,UAAU,WAC7BrC,EAAE,cAAcsC,QAChB,IAAMC,EAASvC,EAAE,gBAAgBiC,MAC7BM,EAAOC,OAAS,GAClB9C,EAAU6C,EAEd,IAKAvC,EAAE,kBAAkBqC,GAAG,SAAS,WAC9B,IAAMI,EAAW,CAAC,EAElBA,EAASC,eAAiB1C,EAAE,gBAAgBiC,MAE5C,IAmCeU,EAnCTC,EAAe5C,EAAE,4BACnB4C,IACFH,EAASI,cAAgBD,EAAaX,MAiCzBU,EA/BDxC,KAAKC,UAAUqC,GAgCjChB,OAAOqB,QAAQC,GAAGC,cAAcL,GA9B9B,GACF,GACF,CA0CD,CArGD","sources":["webpack://office-addin-taskpane-js/./src/settings/dialog.js"],"sourcesContent":["(function () {\r\n  \"use strict\";\r\n\r\n  // The Office initialize function must be run each time a new page is loaded.\r\n  Office.initialize = function (reason) {\r\n    jQuery(document).ready(function () {\r\n      if (window.location.search) {\r\n        // Check if warning should be displayed.\r\n        const warn = getParameterByName(\"warn\");\r\n        if (warn) {\r\n          $(\".not-configured-warning\").show();\r\n        } else {\r\n          // See if the config values were passed.\r\n          // If so, pre-populate the values.\r\n          const user = getParameterByName(\"gitHubUserName\");\r\n          const gistId = getParameterByName(\"defaultGistId\");\r\n\r\n          $(\"#github-user\").val(user);\r\n          loadGists(user, function (success) {\r\n            if (success) {\r\n              $(\".ms-ListItem\").removeClass(\"is-selected\");\r\n              $(\"input\")\r\n                .filter(function () {\r\n                  return this.value === gistId;\r\n                })\r\n                .addClass(\"is-selected\")\r\n                .attr(\"checked\", \"checked\");\r\n              $(\"#settings-done\").removeAttr(\"disabled\");\r\n            }\r\n          });\r\n        }\r\n      }\r\n\r\n      // When the GitHub username changes,\r\n      // try to load gists.\r\n      $(\"#github-user\").on(\"change\", function () {\r\n        $(\"#gist-list\").empty();\r\n        const ghUser = $(\"#github-user\").val();\r\n        if (ghUser.length > 0) {\r\n          loadGists(ghUser);\r\n        }\r\n      });\r\n\r\n      // When the Done button is selected, send the\r\n      // values back to the caller as a serialized\r\n      // object.\r\n      $(\"#settings-done\").on(\"click\", function () {\r\n        const settings = {};\r\n\r\n        settings.gitHubUserName = $(\"#github-user\").val();\r\n\r\n        const selectedGist = $(\".ms-ListItem.is-selected\");\r\n        if (selectedGist) {\r\n          settings.defaultGistId = selectedGist.val();\r\n\r\n          sendMessage(JSON.stringify(settings));\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  // Load gists for the user using the GitHub API\r\n  // and build the list.\r\n  function loadGists(user, callback) {\r\n    getUserGists(user, function (gists, error) {\r\n      if (error) {\r\n        $(\".gist-list-container\").hide();\r\n        $(\"#error-text\").text(JSON.stringify(error, null, 2));\r\n        $(\".error-display\").show();\r\n        if (callback) callback(false);\r\n      } else {\r\n        $(\".error-display\").hide();\r\n        buildGistList($(\"#gist-list\"), gists, onGistSelected);\r\n        $(\".gist-list-container\").show();\r\n        if (callback) callback(true);\r\n      }\r\n    });\r\n  }\r\n\r\n  function onGistSelected() {\r\n    $(\".ms-ListItem\").removeClass(\"is-selected\").removeAttr(\"checked\");\r\n    $(this).children(\".ms-ListItem\").addClass(\"is-selected\").attr(\"checked\", \"checked\");\r\n    $(\".not-configured-warning\").hide();\r\n    $(\"#settings-done\").removeAttr(\"disabled\");\r\n  }\r\n\r\n  function sendMessage(message) {\r\n    Office.context.ui.messageParent(message);\r\n  }\r\n\r\n  function getParameterByName(name, url) {\r\n    if (!url) {\r\n      url = window.location.href;\r\n    }\r\n    name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\r\n    const regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\r\n      results = regex.exec(url);\r\n    if (!results) return null;\r\n    if (!results[2]) return \"\";\r\n    return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\r\n  }\r\n})();\r\n"],"names":["loadGists","user","callback","getUserGists","gists","error","$","hide","text","JSON","stringify","show","buildGistList","onGistSelected","removeClass","removeAttr","this","children","addClass","attr","getParameterByName","name","url","window","location","href","replace","results","RegExp","exec","decodeURIComponent","Office","initialize","reason","jQuery","document","ready","search","gistId","val","success","filter","value","on","empty","ghUser","length","settings","gitHubUserName","message","selectedGist","defaultGistId","context","ui","messageParent"],"sourceRoot":""}